{"version":3,"sources":["webpack:///./resources/js/payment.js"],"names":["stripe","Stripe","stripe_public_key","elements","style","base","fontSize","color","border","classes","cardNumber","create","mount","document","querySelector","addEventListener","e","preventDefault","createToken","name","value","then","result","token","form","hiddenInput","error","alert","getElementById","createElement","setAttribute","id","appendChild","submit"],"mappings":"MACA,IAAMA,EAASC,OAAOC,mBAChBC,EAAWH,EAAOG,WAGlBC,EAAQ,CACZC,KAAM,CACJC,SAAU,OACVC,MAAO,UACPC,OAAQ,kBAINC,EAAU,CACdJ,KAAM,gBAIFK,EAAaP,EAASQ,OAAO,aAAc,CAAEP,MAAOA,EAAOK,QAASA,IAC1EC,EAAWE,MAAM,eACDT,EAASQ,OAAO,UAAW,CAAEP,MAAOA,EAAOK,QAASA,IAC5DG,MAAM,iBACKT,EAASQ,OAAO,aAAc,CAAEP,MAAOA,EAAOK,QAASA,IAC/DG,MAAM,eAIjBC,SAASC,cAAc,iBAAiBC,iBAAiB,UAAU,SAAUC,GAG3EA,EAAEC,iBAGFjB,EAAOkB,YAAYR,EAAY,CAAES,KAAMN,SAASC,cAAc,aAAaM,QAASC,MAAK,SAAUC,GAenG,IAA4BC,EACpBC,EACAC,EAbFH,EAAOI,MACTC,MAAM,wEAUkBJ,EANLD,EAAOC,MAOtBC,EAAOX,SAASe,eAAe,iBAC/BH,EAAcZ,SAASgB,cAAc,UAC/BC,aAAa,OAAQ,UACjCL,EAAYK,aAAa,OAAQ,eACjCL,EAAYK,aAAa,QAASP,EAAMQ,IACxCP,EAAKQ,YAAYP,GAEjBD,EAAKS,gBAGN,I","file":"/js/payment.js","sourcesContent":["/* 基本設定*/\nconst stripe = Stripe(stripe_public_key);\nconst elements = stripe.elements();\n\n/* Stripe Elementsを使ったFormの各パーツをどんなデザインにしたいかを定義 */\nconst style = {\n  base: {\n    fontSize: '12px',\n    color: \"#32325d\",\n    border: \"solid 1px ccc\"\n  }\n};\n\nconst classes = {\n  base: \"form-control\"\n};\n\n/* フォームでdivタグになっている部分をStripe Elementsを使ってフォームに変換 */\nconst cardNumber = elements.create('cardNumber', { style: style, classes: classes });\ncardNumber.mount('#cardNumber');\nconst cardCvc = elements.create('cardCvc', { style: style, classes: classes });\ncardCvc.mount('#securityCode');\nconst cardExpiry = elements.create('cardExpiry', { style: style, classes: classes });\ncardExpiry.mount('#expiration');\n\n\n/* id=\"form_paymentがついたFormのsubmitEvent発生時のプログラム処理を定義\"*/\ndocument.querySelector('#form_payment').addEventListener('submit', function (e) {\n\n  /* 何も処理をかまさないとそのままクレジットカード情報が送信されてしまうので一旦HTMLのFormタグがが従来もっている送信機能を停止させる。 */\n  e.preventDefault();\n\n  /* Stripe.jsを使って、フォームに入力されたコードをStripe側に送信。今回ご紹介している方法の場合、「カード名義」だけはStripe Elementsの仕組みを使っていないため、このままだとカード名義の情報が足りずにカード情報の暗号化ができなくなってしまうので、{name:document.querySelector('#cardName').value}を足すことで、フォームに入力されたカード名義情報も、他の情報と同時にStripeに送ることができるようになる。 */\n  stripe.createToken(cardNumber, { name: document.querySelector('#cardName').value }).then(function (result) {\n\n\n    /* errorが返ってきた場合はその旨を表示 */\n    if (result.error) {\n      alert(\"カード登録処理時にエラーが発生しました。カード番号が正しいものかどうかをご確認いただくか、別のクレジットカードで登録してみてください。\");\n    } else {\n\n      /* 暗号化されたコードが返ってきた場合は以下のStripeTokenHandler関数を実行。その際、引数として暗号化されたコードを渡してあげる。 */\n      stripeTokenHandler(result.token);\n    }\n  });\n\n\n  /* id=\"form_payment\"が指定されたformの送信ボタン直前に、input type=\"hidden\"のHTMLを挿入し、値にStripeから返ってきた暗号化情報を設定。そして、実際にフォームの内容を送信（事実上、送信されるのは暗号化情報のみとなる） */\n  function stripeTokenHandler(token) {\n    const form = document.getElementById('form_payment');\n    const hiddenInput = document.createElement('input');\n    hiddenInput.setAttribute('type', 'hidden');\n    hiddenInput.setAttribute('name', 'stripeToken');\n    hiddenInput.setAttribute('value', token.id);\n    form.appendChild(hiddenInput);\n\n    form.submit();\n  }\n\n}, false);\n"],"sourceRoot":""}